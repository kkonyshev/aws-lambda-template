// -*- coding: utf-8; mode: groovy -*-
import com.amazonaws.services.lambda.model.InvocationType
import com.amazonaws.services.lambda.model.Runtime
import jp.classmethod.aws.gradle.lambda.AWSLambdaDeleteFunctionTask
import jp.classmethod.aws.gradle.lambda.AWSLambdaInvokeTask
import jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask

buildscript {
	repositories {
		mavenCentral()
		maven { url 'http://public-maven.classmethod.info/release' }
	}
	dependencies {
		classpath "jp.classmethod.aws:gradle-aws-plugin:0.18.1"
	}
}

group = "sh.lambda.email"
version = "0.1-SNAPSHOT"

ext.artifactId = "content-decoder"
ext.functionName = "sh-email-content-decoder"

apply plugin: "java"
apply plugin: "aws-lambda"

ext.defaultEncoding = "UTF-8"
sourceCompatibility = targetCompatibility = 1.8
tasks.withType(AbstractCompile) each {
	it.options.encoding = ext.defaultEncoding
}

compileJava {
	options.compilerArgs << "-Xlint:deprecation"
}

javadoc {
	failOnError false
}

// ======== libraries ========
repositories {
	mavenCentral()
}

dependencies {
	compile 'com.amazonaws:aws-lambda-java-core:1.0.0'
	compile 'com.google.guava:guava:18.0'
	compile 'com.google.code.gson:gson:2.8.0'
	compile 'net.dongliu:gson-java8-datatype:1.0.2'
	compile 'com.amazonaws:aws-java-sdk-s3:1.11.105'
	compile 'javax.mail:mail:1.4.7'
	compile 'org.jsoup:jsoup:1.10.1'
}

// ======== bundle ========
jar {
	into('lib') {
		from configurations.compile
	}
}

// ======== deploy ========
aws {
	profileName "default"
	region "eu-west-1"
}

task migrateFunction(type: AWSLambdaMigrateFunctionTask, dependsOn: build) {
	functionName = project.functionName
	role = "arn:aws:iam::${aws.accountId}:role/lambda_basic_execution"
	runtime = Runtime.Java8
	zipFile = jar.archivePath
	handler = "sh.lambda.email.content.ContentDecoder"
}

task invokeFunction(type: AWSLambdaInvokeTask) {
	functionName = project.functionName
	invocationType = InvocationType.RequestResponse
	payload = file("src/test/resources/input.txt")
	doLast {
		println "Lambda function result: " + new String(invokeResult.payload.array(), "UTF-8")
	}
}

task deleteFunction(type: AWSLambdaDeleteFunctionTask) {
	functionName = project.functionName
}

// ======== wrapper ========
task wrapper(type: Wrapper) {
	gradleVersion = '2.4'
}
